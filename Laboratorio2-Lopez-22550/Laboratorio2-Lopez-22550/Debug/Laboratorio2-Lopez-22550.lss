
Laboratorio2-Lopez-22550.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000424  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000424  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000453  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000461  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000152f  00000000  00000000  000004f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089c  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067d  00000000  00000000  000022c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  00002944  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000026a  00000000  00000000  00002a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000735  00000000  00000000  00002cf6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000342b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000033c  0000033c  00000410  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000034a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.LCD_Port 00000092  000000ce  000000ce  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LCD_CMD 00000024  0000029c  0000029c  00000370  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.initLCD8bits 0000006a  000001ce  000001ce  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_Write_Char 00000024  000002c0  000002c0  00000394  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.LCD_Write_String 0000002c  00000270  00000270  00000344  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LCD_Set_Cursor 00000022  000002e4  000002e4  000003b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.main    0000006e  00000160  00000160  00000234  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_21 00000038  00000238  00000238  0000030c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__vector_18 00000020  00000306  00000306  000003da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .data.cadena  00000006  00800101  0000034a  0000041e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss.valor_adc 00000001  00800107  00800107  00000424  2**0
                  ALLOC
 26 .text.__dummy_fini 00000002  00000344  00000344  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.__dummy_funcs_on_exit 00000002  00000346  00000346  0000041a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__dummy_simulator_exit 00000002  00000348  00000348  0000041c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.exit    00000016  00000326  00000326  000003fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text._Exit   00000004  00000340  00000340  00000414  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
   8:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
   c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  10:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  14:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  18:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  1c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  20:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  24:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  28:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  2c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  30:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  34:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  38:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  3c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  40:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  44:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  48:	0c 94 83 01 	jmp	0x306	; 0x306 <__vector_18>
  4c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  50:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__vector_21>
  58:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  5c:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  60:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>
  64:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 01       	movw	r0, r2
  6c:	80 01       	movw	r16, r0
  6e:	01 01       	movw	r0, r2
  70:	07 00       	.word	0x0007	; ????
  72:	03 4a       	sbci	r16, 0xA3	; 163
  74:	01 07       	cpc	r16, r17
  76:	01 08       	sbc	r0, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 b0 00 	call	0x160	; 0x160 <main>
  c6:	0c 94 93 01 	jmp	0x326	; 0x326 <exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

0000033c <__bad_interrupt>:
 33c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.LCD_Port:

000000ce <LCD_Port>:
	LCD_CMD(0x0C);
}

void LCD_Shift_Left(void){
	LCD_CMD(0x01);
	LCD_CMD(0x08);
  ce:	80 ff       	sbrs	r24, 0
  d0:	04 c0       	rjmp	.+8      	; 0xda <LCD_Port+0xc>
  d2:	9b b1       	in	r25, 0x0b	; 11
  d4:	90 62       	ori	r25, 0x20	; 32
  d6:	9b b9       	out	0x0b, r25	; 11
  d8:	03 c0       	rjmp	.+6      	; 0xe0 <LCD_Port+0x12>
  da:	9b b1       	in	r25, 0x0b	; 11
  dc:	9f 7d       	andi	r25, 0xDF	; 223
  de:	9b b9       	out	0x0b, r25	; 11
  e0:	81 ff       	sbrs	r24, 1
  e2:	04 c0       	rjmp	.+8      	; 0xec <LCD_Port+0x1e>
  e4:	9b b1       	in	r25, 0x0b	; 11
  e6:	90 64       	ori	r25, 0x40	; 64
  e8:	9b b9       	out	0x0b, r25	; 11
  ea:	03 c0       	rjmp	.+6      	; 0xf2 <LCD_Port+0x24>
  ec:	9b b1       	in	r25, 0x0b	; 11
  ee:	9f 7b       	andi	r25, 0xBF	; 191
  f0:	9b b9       	out	0x0b, r25	; 11
  f2:	82 ff       	sbrs	r24, 2
  f4:	04 c0       	rjmp	.+8      	; 0xfe <LCD_Port+0x30>
  f6:	9b b1       	in	r25, 0x0b	; 11
  f8:	90 68       	ori	r25, 0x80	; 128
  fa:	9b b9       	out	0x0b, r25	; 11
  fc:	03 c0       	rjmp	.+6      	; 0x104 <LCD_Port+0x36>
  fe:	9b b1       	in	r25, 0x0b	; 11
 100:	9f 77       	andi	r25, 0x7F	; 127
 102:	9b b9       	out	0x0b, r25	; 11
 104:	83 ff       	sbrs	r24, 3
 106:	04 c0       	rjmp	.+8      	; 0x110 <LCD_Port+0x42>
 108:	95 b1       	in	r25, 0x05	; 5
 10a:	91 60       	ori	r25, 0x01	; 1
 10c:	95 b9       	out	0x05, r25	; 5
 10e:	03 c0       	rjmp	.+6      	; 0x116 <LCD_Port+0x48>
 110:	95 b1       	in	r25, 0x05	; 5
 112:	9e 7f       	andi	r25, 0xFE	; 254
 114:	95 b9       	out	0x05, r25	; 5
 116:	84 ff       	sbrs	r24, 4
 118:	04 c0       	rjmp	.+8      	; 0x122 <LCD_Port+0x54>
 11a:	95 b1       	in	r25, 0x05	; 5
 11c:	92 60       	ori	r25, 0x02	; 2
 11e:	95 b9       	out	0x05, r25	; 5
 120:	03 c0       	rjmp	.+6      	; 0x128 <LCD_Port+0x5a>
 122:	95 b1       	in	r25, 0x05	; 5
 124:	9d 7f       	andi	r25, 0xFD	; 253
 126:	95 b9       	out	0x05, r25	; 5
 128:	85 ff       	sbrs	r24, 5
 12a:	04 c0       	rjmp	.+8      	; 0x134 <LCD_Port+0x66>
 12c:	95 b1       	in	r25, 0x05	; 5
 12e:	94 60       	ori	r25, 0x04	; 4
 130:	95 b9       	out	0x05, r25	; 5
 132:	03 c0       	rjmp	.+6      	; 0x13a <LCD_Port+0x6c>
 134:	95 b1       	in	r25, 0x05	; 5
 136:	9b 7f       	andi	r25, 0xFB	; 251
 138:	95 b9       	out	0x05, r25	; 5
 13a:	86 ff       	sbrs	r24, 6
 13c:	04 c0       	rjmp	.+8      	; 0x146 <LCD_Port+0x78>
 13e:	95 b1       	in	r25, 0x05	; 5
 140:	98 60       	ori	r25, 0x08	; 8
 142:	95 b9       	out	0x05, r25	; 5
 144:	03 c0       	rjmp	.+6      	; 0x14c <LCD_Port+0x7e>
 146:	95 b1       	in	r25, 0x05	; 5
 148:	97 7f       	andi	r25, 0xF7	; 247
 14a:	95 b9       	out	0x05, r25	; 5
 14c:	88 23       	and	r24, r24
 14e:	24 f4       	brge	.+8      	; 0x158 <LCD_Port+0x8a>
 150:	85 b1       	in	r24, 0x05	; 5
 152:	80 61       	ori	r24, 0x10	; 16
 154:	85 b9       	out	0x05, r24	; 5
 156:	08 95       	ret
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	8f 7e       	andi	r24, 0xEF	; 239
 15c:	85 b9       	out	0x05, r24	; 5
 15e:	08 95       	ret

Disassembly of section .text.LCD_CMD:

0000029c <LCD_CMD>:
 29c:	9b b1       	in	r25, 0x0b	; 11
 29e:	9b 7f       	andi	r25, 0xFB	; 251
 2a0:	9b b9       	out	0x0b, r25	; 11
 2a2:	0e 94 67 00 	call	0xce	; 0xce <__data_load_end>
 2a6:	8b b1       	in	r24, 0x0b	; 11
 2a8:	80 61       	ori	r24, 0x10	; 16
 2aa:	8b b9       	out	0x0b, r24	; 11
 2ac:	8f e7       	ldi	r24, 0x7F	; 127
 2ae:	9e e3       	ldi	r25, 0x3E	; 62
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <LCD_CMD+0x14>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <LCD_CMD+0x1a>
 2b6:	00 00       	nop
 2b8:	8b b1       	in	r24, 0x0b	; 11
 2ba:	8f 7e       	andi	r24, 0xEF	; 239
 2bc:	8b b9       	out	0x0b, r24	; 11
 2be:	08 95       	ret

Disassembly of section .text.initLCD8bits:

000001ce <initLCD8bits>:
 1ce:	8a b1       	in	r24, 0x0a	; 10
 1d0:	8c 6f       	ori	r24, 0xFC	; 252
 1d2:	8a b9       	out	0x0a, r24	; 10
 1d4:	8b b1       	in	r24, 0x0b	; 11
 1d6:	83 70       	andi	r24, 0x03	; 3
 1d8:	8b b9       	out	0x0b, r24	; 11
 1da:	84 b1       	in	r24, 0x04	; 4
 1dc:	8f 63       	ori	r24, 0x3F	; 63
 1de:	84 b9       	out	0x04, r24	; 4
 1e0:	15 b8       	out	0x05, r1	; 5
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	0e 94 67 00 	call	0xce	; 0xce <__data_load_end>
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	89 ef       	ldi	r24, 0xF9	; 249
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <initLCD8bits+0x20>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <initLCD8bits+0x2a>
 1f8:	00 00       	nop
 1fa:	88 e3       	ldi	r24, 0x38	; 56
 1fc:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_CMD>
 200:	87 eb       	ldi	r24, 0xB7	; 183
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <initLCD8bits+0x36>
 208:	00 c0       	rjmp	.+0      	; 0x20a <initLCD8bits+0x3c>
 20a:	00 00       	nop
 20c:	8c e0       	ldi	r24, 0x0C	; 12
 20e:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_CMD>
 212:	87 eb       	ldi	r24, 0xB7	; 183
 214:	91 e0       	ldi	r25, 0x01	; 1
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <initLCD8bits+0x48>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <initLCD8bits+0x4e>
 21c:	00 00       	nop
 21e:	86 e0       	ldi	r24, 0x06	; 6
 220:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_CMD>
 224:	87 eb       	ldi	r24, 0xB7	; 183
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <initLCD8bits+0x5a>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <initLCD8bits+0x60>
 22e:	00 00       	nop
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_CMD>
 236:	08 95       	ret

Disassembly of section .text.LCD_Write_Char:

000002c0 <LCD_Write_Char>:
 2c0:	9b b1       	in	r25, 0x0b	; 11
 2c2:	94 60       	ori	r25, 0x04	; 4
 2c4:	9b b9       	out	0x0b, r25	; 11
 2c6:	0e 94 67 00 	call	0xce	; 0xce <__data_load_end>
 2ca:	8b b1       	in	r24, 0x0b	; 11
 2cc:	80 61       	ori	r24, 0x10	; 16
 2ce:	8b b9       	out	0x0b, r24	; 11
 2d0:	8f e3       	ldi	r24, 0x3F	; 63
 2d2:	9c e9       	ldi	r25, 0x9C	; 156
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_Write_Char+0x14>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_Write_Char+0x1a>
 2da:	00 00       	nop
 2dc:	8b b1       	in	r24, 0x0b	; 11
 2de:	8f 7e       	andi	r24, 0xEF	; 239
 2e0:	8b b9       	out	0x0b, r24	; 11
 2e2:	08 95       	ret

Disassembly of section .text.LCD_Write_String:

00000270 <LCD_Write_String>:
 270:	0f 93       	push	r16
 272:	1f 93       	push	r17
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	8c 01       	movw	r16, r24
 27a:	c0 e0       	ldi	r28, 0x00	; 0
 27c:	d0 e0       	ldi	r29, 0x00	; 0
 27e:	03 c0       	rjmp	.+6      	; 0x286 <LCD_Write_String+0x16>
 280:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Write_Char>
 284:	21 96       	adiw	r28, 0x01	; 1
 286:	f8 01       	movw	r30, r16
 288:	ec 0f       	add	r30, r28
 28a:	fd 1f       	adc	r31, r29
 28c:	80 81       	ld	r24, Z
 28e:	81 11       	cpse	r24, r1
 290:	f7 cf       	rjmp	.-18     	; 0x280 <LCD_Write_String+0x10>
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	1f 91       	pop	r17
 298:	0f 91       	pop	r16
 29a:	08 95       	ret

Disassembly of section .text.LCD_Set_Cursor:

000002e4 <LCD_Set_Cursor>:
}

void LCD_Set_Cursor(int columna, int fila){
	int coordenada = 0;
	if (fila == 1){
 2e4:	61 30       	cpi	r22, 0x01	; 1
 2e6:	71 05       	cpc	r23, r1
 2e8:	19 f4       	brne	.+6      	; 0x2f0 <LCD_Set_Cursor+0xc>
		coordenada = 0x80 + columna;
 2ea:	80 58       	subi	r24, 0x80	; 128
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	08 c0       	rjmp	.+16     	; 0x300 <LCD_Set_Cursor+0x1c>
	} else if (fila == 2)
 2f0:	62 30       	cpi	r22, 0x02	; 2
 2f2:	71 05       	cpc	r23, r1
 2f4:	19 f4       	brne	.+6      	; 0x2fc <LCD_Set_Cursor+0x18>
	{
		coordenada = 0xC0 + columna;
 2f6:	80 54       	subi	r24, 0x40	; 64
 2f8:	9f 4f       	sbci	r25, 0xFF	; 255
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <LCD_Set_Cursor+0x1c>
	LCD_CMD(0x01);
	LCD_CMD(0x08);
}

void LCD_Set_Cursor(int columna, int fila){
	int coordenada = 0;
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	90 e0       	ldi	r25, 0x00	; 0
		coordenada = 0x80 + columna;
	} else if (fila == 2)
	{
		coordenada = 0xC0 + columna;
		}
		LCD_CMD(coordenada);
 300:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_CMD>
 304:	08 95       	ret

Disassembly of section .text.main:

00000160 <main>:
	_delay_ms(3);
	LCD_Set_Cursor(0, 2);
	LCD_Write_Char(CERO + unidades);
	LCD_Write_Char(CERO + decenas);
	LCD_Write_Char(CERO + centenas);
}
 160:	0e 94 e7 00 	call	0x1ce	; 0x1ce <initLCD8bits>
 164:	8f e3       	ldi	r24, 0x3F	; 63
 166:	9f e1       	ldi	r25, 0x1F	; 31
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <main+0x8>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0xe>
 16e:	00 00       	nop
 170:	61 e0       	ldi	r22, 0x01	; 1
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_Set_Cursor>
 17c:	8f e9       	ldi	r24, 0x9F	; 159
 17e:	9f e0       	ldi	r25, 0x0F	; 15
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <main+0x20>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x26>
 186:	00 00       	nop
 188:	88 e4       	ldi	r24, 0x48	; 72
 18a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Write_Char>
 18e:	8f e4       	ldi	r24, 0x4F	; 79
 190:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Write_Char>
 194:	8c e4       	ldi	r24, 0x4C	; 76
 196:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Write_Char>
 19a:	81 e4       	ldi	r24, 0x41	; 65
 19c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Write_Char>
 1a0:	8f e3       	ldi	r24, 0x3F	; 63
 1a2:	9f e1       	ldi	r25, 0x1F	; 31
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <main+0x44>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x4a>
 1aa:	00 00       	nop
 1ac:	62 e0       	ldi	r22, 0x02	; 2
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_Set_Cursor>
 1b8:	8f e3       	ldi	r24, 0x3F	; 63
 1ba:	9f e1       	ldi	r25, 0x1F	; 31
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <main+0x5c>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x62>
 1c2:	00 00       	nop
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 38 01 	call	0x270	; 0x270 <LCD_Write_String>
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <main+0x6c>

Disassembly of section .text.__vector_21:

00000238 <__vector_21>:


ISR (ADC_vect){
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
 242:	8f 93       	push	r24
 244:	ef 93       	push	r30
 246:	ff 93       	push	r31
	/*PORTB &= ~(1<<PB0); //Se apagan los LEDS del contador binario
	PORTB |= (1<<PB1);	//Se encienden los displays de 7 segmentos de unidades.
	PORTB |= (1<<PB2);*/
	
	//uint8_t 
	valor_adc = ADCH; // 1010 1110 & 0000 1111
 248:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 24c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <valor_adc>
	ADCSRA |= (1<<ADIF);
 250:	ea e7       	ldi	r30, 0x7A	; 122
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	80 61       	ori	r24, 0x10	; 16
 258:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 25a:	80 81       	ld	r24, Z
 25c:	80 64       	ori	r24, 0x40	; 64
 25e:	80 83       	st	Z, r24
}
 260:	ff 91       	pop	r31
 262:	ef 91       	pop	r30
 264:	8f 91       	pop	r24
 266:	0f 90       	pop	r0
 268:	0f be       	out	0x3f, r0	; 63
 26a:	0f 90       	pop	r0
 26c:	1f 90       	pop	r1
 26e:	18 95       	reti

Disassembly of section .text.__vector_18:

00000306 <__vector_18>:


ISR(USART_RX_vect){
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	0f 92       	push	r0
 30e:	11 24       	eor	r1, r1
 310:	8f 93       	push	r24
	bufferRX = UDR0;
 312:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 316:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>

		
		//while (!(UCSR0A & (1<<UDRE0)));
		//UDR0 = bufferRX;
		
	}
 31a:	8f 91       	pop	r24
 31c:	0f 90       	pop	r0
 31e:	0f be       	out	0x3f, r0	; 63
 320:	0f 90       	pop	r0
 322:	1f 90       	pop	r1
 324:	18 95       	reti

Disassembly of section .text.__dummy_fini:

00000344 <_fini>:
 344:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000346 <__funcs_on_exit>:
 346:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000348 <__simulator_exit>:
 348:	08 95       	ret

Disassembly of section .text.exit:

00000326 <exit>:
 326:	ec 01       	movw	r28, r24
 328:	0e 94 a3 01 	call	0x346	; 0x346 <__funcs_on_exit>
 32c:	0e 94 a2 01 	call	0x344	; 0x344 <_fini>
 330:	ce 01       	movw	r24, r28
 332:	0e 94 a4 01 	call	0x348	; 0x348 <__simulator_exit>
 336:	ce 01       	movw	r24, r28
 338:	0e 94 a0 01 	call	0x340	; 0x340 <_Exit>

Disassembly of section .text._Exit:

00000340 <_Exit>:
 340:	0e 94 65 00 	call	0xca	; 0xca <_exit>
