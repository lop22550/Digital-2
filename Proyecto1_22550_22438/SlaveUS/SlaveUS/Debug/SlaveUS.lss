
SlaveUS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000070b  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000070b  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 000000c4  00000000  00000000  0000073a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000007fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f6d  00000000  00000000  0000088e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008a8  00000000  00000000  000017fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005c8  00000000  00000000  000020a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  0000266c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000244  00000000  00000000  000027cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d1  00000000  00000000  00002a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002de1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000628  00000628  000006fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002e54  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.I2C_Slave_Init 00000014  000005c8  000005c8  0000069c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.initUS  00000056  0000049e  0000049e  00000572  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.US_Request 00000016  0000059c  0000059c  00000670  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000042  00000538  00000538  0000060c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_24 0000007e  00000348  00000348  0000041c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_4 000000c8  00000280  00000280  00000354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.last_state.2009 00000001  00800102  00800102  0000070b  2**0
                  ALLOC
 21 .data.distance 00000001  00800103  00000636  0000070a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss.pulse    00000002  00800100  00800100  0000070b  2**0
                  ALLOC
 23 .bss.buffer   00000001  00800104  00800104  0000070b  2**0
                  ALLOC
 24 .text         00000008  00000612  00000612  000006e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text         000000de  000000ce  000000ce  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text         0000005e  00000440  00000440  00000514  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text         0000007a  000003c6  000003c6  0000049a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text         0000000c  00000606  00000606  000006da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text         00000006  00000622  00000622  000006f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text         0000000e  000005dc  000005dc  000006b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text         0000000e  000005ea  000005ea  000006be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text         00000022  0000057a  0000057a  0000064e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text         00000044  000004f4  000004f4  000005c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text         0000000e  000005f8  000005f8  000006cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text         00000008  0000061a  0000061a  000006ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text         000000d4  000001ac  000001ac  00000280  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.__dummy_fini 00000002  00000630  00000630  00000704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.__dummy_funcs_on_exit 00000002  00000632  00000632  00000706  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__dummy_simulator_exit 00000002  00000634  00000634  00000708  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.exit    00000016  000005b2  000005b2  00000686  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text._Exit   00000004  0000062c  0000062c  00000700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
   8:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
   c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  10:	0c 94 40 01 	jmp	0x280	; 0x280 <__vector_4>
  14:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  18:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  1c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  20:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  24:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  28:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  2c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  30:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  34:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  38:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  3c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  40:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  44:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  48:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  4c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  50:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  54:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  58:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  5c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_24>
  64:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 03       	mulsu	r16, r17
  6c:	80 01       	movw	r16, r0
  6e:	03 01       	movw	r0, r6
  70:	04 00       	.word	0x0004	; ????
  72:	06 36       	cpi	r16, 0x66	; 102
  74:	01 04       	cpc	r0, r1
  76:	01 05       	cpc	r16, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 9c 02 	call	0x538	; 0x538 <main>
  c6:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000628 <__bad_interrupt>:
 628:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.I2C_Slave_Init:

000005c8 <I2C_Slave_Init>:
}
//********************
//Funcion para inicializar I2C Esclavo
//********************
void I2C_Slave_Init(uint8_t adress){
	DDRC &= ~((1<<DDC4)|(1<<DDC5)); //PINES DE I2C COMO ENTRADAS
 5c8:	97 b1       	in	r25, 0x07	; 7
 5ca:	9f 7c       	andi	r25, 0xCF	; 207
 5cc:	97 b9       	out	0x07, r25	; 7
	TWAR = adress <<1; //se asigna la direccion que tendra
 5ce:	88 0f       	add	r24, r24
 5d0:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
	TWCR = (1<<TWEA)|(1<<TWEN)|(1<<TWIE);
 5d4:	85 e4       	ldi	r24, 0x45	; 69
 5d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 5da:	08 95       	ret

Disassembly of section .text.initUS:

0000049e <initUS>:



//-------- Funciones ------------------------------ 
void initUS(void){
	DDRC |= (1 << DDC0);  // Configurar PC0 como salida; Trigger pin
 49e:	87 b1       	in	r24, 0x07	; 7
 4a0:	81 60       	ori	r24, 0x01	; 1
 4a2:	87 b9       	out	0x07, r24	; 7
	PORTC &= ~(1 << PORTC0); //Asegurar señal en bajo antes de iniciar comunicación
 4a4:	88 b1       	in	r24, 0x08	; 8
 4a6:	8e 7f       	andi	r24, 0xFE	; 254
 4a8:	88 b9       	out	0x08, r24	; 8
	//DDRC &= ~(1<<PINC1); // Configurar PC1 como entrada; Echo pin 
	PORTC |= (1 << PINC1); // Pull-up en ECHO_PIN
 4aa:	88 b1       	in	r24, 0x08	; 8
 4ac:	82 60       	ori	r24, 0x02	; 2
 4ae:	88 b9       	out	0x08, r24	; 8

	
	// Configuración Pin Change para PC1 (Echo del US)
	PCICR |= (1 << PCIE1);   // Habilita PCINT1 (PORTC)
 4b0:	e8 e6       	ldi	r30, 0x68	; 104
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	82 60       	ori	r24, 0x02	; 2
 4b8:	80 83       	st	Z, r24
	PCMSK1 |= (1 << PCINT9); // Habilita PCINT9 (PC1)
 4ba:	ec e6       	ldi	r30, 0x6C	; 108
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	82 60       	ori	r24, 0x02	; 2
 4c2:	80 83       	st	Z, r24
	
	TCCR1B |= (1 << CS11); // Prescaler 8
 4c4:	e1 e8       	ldi	r30, 0x81	; 129
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	82 60       	ori	r24, 0x02	; 2
 4cc:	80 83       	st	Z, r24
	TCNT1 = 0; // Inicia en 0
 4ce:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 4d2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCCR1A |= (1 << COM1A1) | (1 << WGM11);
 4d6:	a0 e8       	ldi	r26, 0x80	; 128
 4d8:	b0 e0       	ldi	r27, 0x00	; 0
 4da:	8c 91       	ld	r24, X
 4dc:	82 68       	ori	r24, 0x82	; 130
 4de:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM13) | (1 << WGM12);
 4e0:	80 81       	ld	r24, Z
 4e2:	88 61       	ori	r24, 0x18	; 24
 4e4:	80 83       	st	Z, r24
	ICR1 = 20000; // 20 ms (50 Hz)
 4e6:	80 e2       	ldi	r24, 0x20	; 32
 4e8:	9e e4       	ldi	r25, 0x4E	; 78
 4ea:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 4ee:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 4f2:	08 95       	ret

Disassembly of section .text.US_Request:

0000059c <US_Request>:

}

void US_Request(void){
	PORTC |= (1 << PINC0);  // Enviar señal alta
 59c:	88 b1       	in	r24, 0x08	; 8
 59e:	81 60       	ori	r24, 0x01	; 1
 5a0:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5a2:	85 e3       	ldi	r24, 0x35	; 53
 5a4:	8a 95       	dec	r24
 5a6:	f1 f7       	brne	.-4      	; 0x5a4 <US_Request+0x8>
 5a8:	00 00       	nop
	_delay_us(10);  // Mantener señal baja al menos 10us
	PORTC &= ~(1 << PINC0);  // Bajar la señal
 5aa:	88 b1       	in	r24, 0x08	; 8
 5ac:	8e 7f       	andi	r24, 0xFE	; 254
 5ae:	88 b9       	out	0x08, r24	; 8
 5b0:	08 95       	ret

Disassembly of section .text.main:

00000538 <main>:


int main(void)
{
	
	DDRB |= (1<<DDB5);
 538:	84 b1       	in	r24, 0x04	; 4
 53a:	80 62       	ori	r24, 0x20	; 32
 53c:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1<<PORTB5);
 53e:	85 b1       	in	r24, 0x05	; 5
 540:	8f 7d       	andi	r24, 0xDF	; 223
 542:	85 b9       	out	0x05, r24	; 5
	
	I2C_Slave_Init(SlaveAddress);
 544:	80 e4       	ldi	r24, 0x40	; 64
 546:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <I2C_Slave_Init>
	initUS();
 54a:	0e 94 4f 02 	call	0x49e	; 0x49e <initUS>
	
	sei(); //Habilita las interrupciones
 54e:	78 94       	sei
	
    while(1)
    {
		//Se inicia calibración del sensor
		US_Request();
 550:	0e 94 ce 02 	call	0x59c	; 0x59c <US_Request>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 554:	2f ef       	ldi	r18, 0xFF	; 255
 556:	81 ee       	ldi	r24, 0xE1	; 225
 558:	94 e0       	ldi	r25, 0x04	; 4
 55a:	21 50       	subi	r18, 0x01	; 1
 55c:	80 40       	sbci	r24, 0x00	; 0
 55e:	90 40       	sbci	r25, 0x00	; 0
 560:	e1 f7       	brne	.-8      	; 0x55a <main+0x22>
 562:	00 c0       	rjmp	.+0      	; 0x564 <main+0x2c>
 564:	00 00       	nop
		//Delay para calibración.
		_delay_ms(100);
		
		
		
		if(buffer == 'R'){
 566:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <buffer>
 56a:	82 35       	cpi	r24, 0x52	; 82
 56c:	89 f7       	brne	.-30     	; 0x550 <main+0x18>
			//Se enciende LED indicador de comunicación. 
			PINB |= (1<<PINB5);
 56e:	83 b1       	in	r24, 0x03	; 3
 570:	80 62       	ori	r24, 0x20	; 32
 572:	83 b9       	out	0x03, r24	; 3
			buffer = 0;}
 574:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <buffer>
 578:	eb cf       	rjmp	.-42     	; 0x550 <main+0x18>

Disassembly of section .text.__vector_24:

00000348 <__vector_24>:
	return count;
}


//---Interrupciones------------------------------------------------------------------------------------------
ISR(TWI_vect){
 348:	1f 92       	push	r1
 34a:	0f 92       	push	r0
 34c:	0f b6       	in	r0, 0x3f	; 63
 34e:	0f 92       	push	r0
 350:	11 24       	eor	r1, r1
 352:	8f 93       	push	r24
 354:	ef 93       	push	r30
 356:	ff 93       	push	r31
	uint8_t estado;
	estado = TWSR & 0xFC;
 358:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 35c:	8c 7f       	andi	r24, 0xFC	; 252
	switch(estado){
 35e:	80 38       	cpi	r24, 0x80	; 128
 360:	99 f0       	breq	.+38     	; 0x388 <__vector_24+0x40>
 362:	28 f4       	brcc	.+10     	; 0x36e <__vector_24+0x26>
 364:	80 36       	cpi	r24, 0x60	; 96
 366:	51 f0       	breq	.+20     	; 0x37c <__vector_24+0x34>
 368:	80 37       	cpi	r24, 0x70	; 112
 36a:	41 f0       	breq	.+16     	; 0x37c <__vector_24+0x34>
 36c:	1f c0       	rjmp	.+62     	; 0x3ac <__vector_24+0x64>
 36e:	88 3a       	cpi	r24, 0xA8	; 168
 370:	a9 f0       	breq	.+42     	; 0x39c <__vector_24+0x54>
 372:	88 3b       	cpi	r24, 0xB8	; 184
 374:	99 f0       	breq	.+38     	; 0x39c <__vector_24+0x54>
 376:	80 39       	cpi	r24, 0x90	; 144
 378:	c9 f4       	brne	.+50     	; 0x3ac <__vector_24+0x64>
 37a:	06 c0       	rjmp	.+12     	; 0x388 <__vector_24+0x40>
		case 0x60:
		case 0x70:
		TWCR |= (1<< TWINT);
 37c:	ec eb       	ldi	r30, 0xBC	; 188
 37e:	f0 e0       	ldi	r31, 0x00	; 0
 380:	80 81       	ld	r24, Z
 382:	80 68       	ori	r24, 0x80	; 128
 384:	80 83       	st	Z, r24
		break;
 386:	17 c0       	rjmp	.+46     	; 0x3b6 <__vector_24+0x6e>
		case 0x80:
		case 0x90:
		buffer = TWDR;
 388:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 38c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <buffer>
		TWCR |= (1<< TWINT); // Se limpia la bandera
 390:	ec eb       	ldi	r30, 0xBC	; 188
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	80 81       	ld	r24, Z
 396:	80 68       	ori	r24, 0x80	; 128
 398:	80 83       	st	Z, r24
		break;
 39a:	0d c0       	rjmp	.+26     	; 0x3b6 <__vector_24+0x6e>
		case 0xA8:
		case 0xB8:
		TWDR = distance; // Cargar el dato
 39c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <distance>
 3a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		TWCR = (1 << TWEN)|(1 << TWIE)|(1 << TWINT)|(1 << TWEA); // Inicia el envio
 3a4:	85 ec       	ldi	r24, 0xC5	; 197
 3a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		break;
 3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <__vector_24+0x6e>
		default: // Se libera el bus de cualquier error
		TWCR |= (1<< TWINT)|(1<<TWSTO);
 3ac:	ec eb       	ldi	r30, 0xBC	; 188
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	80 69       	ori	r24, 0x90	; 144
 3b4:	80 83       	st	Z, r24
		break;
	}
}
 3b6:	ff 91       	pop	r31
 3b8:	ef 91       	pop	r30
 3ba:	8f 91       	pop	r24
 3bc:	0f 90       	pop	r0
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	0f 90       	pop	r0
 3c2:	1f 90       	pop	r1
 3c4:	18 95       	reti

Disassembly of section .text.__vector_4:

00000280 <__vector_4>:
		count++;
		if (count >= 4000) return 400; // Si se pasa el tiempo, devolver distancia máxima (~2m)
	}

	return count;
}
 280:	1f 92       	push	r1
 282:	0f 92       	push	r0
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	0f 92       	push	r0
 288:	11 24       	eor	r1, r1
 28a:	2f 93       	push	r18
 28c:	3f 93       	push	r19
 28e:	4f 93       	push	r20
 290:	5f 93       	push	r21
 292:	6f 93       	push	r22
 294:	7f 93       	push	r23
 296:	8f 93       	push	r24
 298:	9f 93       	push	r25
 29a:	af 93       	push	r26
 29c:	bf 93       	push	r27
 29e:	cf 93       	push	r28
 2a0:	ef 93       	push	r30
 2a2:	ff 93       	push	r31
 2a4:	86 b1       	in	r24, 0x06	; 6
 2a6:	c1 e0       	ldi	r28, 0x01	; 1
 2a8:	98 2f       	mov	r25, r24
 2aa:	92 70       	andi	r25, 0x02	; 2
 2ac:	81 ff       	sbrs	r24, 1
 2ae:	c0 e0       	ldi	r28, 0x00	; 0
 2b0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <last_state.2009>
 2b4:	c8 17       	cp	r28, r24
 2b6:	b1 f1       	breq	.+108    	; 0x324 <__vector_4+0xa4>
 2b8:	99 23       	and	r25, r25
 2ba:	29 f0       	breq	.+10     	; 0x2c6 <__vector_4+0x46>
 2bc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 2c0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 2c4:	2d c0       	rjmp	.+90     	; 0x320 <__vector_4+0xa0>
 2c6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 2ca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 2ce:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2d2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2d6:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2da:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	40 e0       	ldi	r20, 0x00	; 0
 2ec:	5f e3       	ldi	r21, 0x3F	; 63
 2ee:	0e 94 0d 03 	call	0x61a	; 0x61a <__mulsf3>
 2f2:	20 e0       	ldi	r18, 0x00	; 0
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	48 e6       	ldi	r20, 0x68	; 104
 2f8:	52 e4       	ldi	r21, 0x42	; 66
 2fa:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
 2fe:	0e 94 20 02 	call	0x440	; 0x440 <__fixunssfsi>
 302:	60 93 03 01 	sts	0x0103, r22	; 0x800103 <distance>
 306:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <distance>
 30a:	89 3c       	cpi	r24, 0xC9	; 201
 30c:	30 f4       	brcc	.+12     	; 0x31a <__vector_4+0x9a>
 30e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 312:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 316:	89 2b       	or	r24, r25
 318:	19 f4       	brne	.+6      	; 0x320 <__vector_4+0xa0>
 31a:	8f ef       	ldi	r24, 0xFF	; 255
 31c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <distance>
 320:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <last_state.2009>
 324:	ff 91       	pop	r31
 326:	ef 91       	pop	r30
 328:	cf 91       	pop	r28
 32a:	bf 91       	pop	r27
 32c:	af 91       	pop	r26
 32e:	9f 91       	pop	r25
 330:	8f 91       	pop	r24
 332:	7f 91       	pop	r23
 334:	6f 91       	pop	r22
 336:	5f 91       	pop	r21
 338:	4f 91       	pop	r20
 33a:	3f 91       	pop	r19
 33c:	2f 91       	pop	r18
 33e:	0f 90       	pop	r0
 340:	0f be       	out	0x3f, r0	; 63
 342:	0f 90       	pop	r0
 344:	1f 90       	pop	r1
 346:	18 95       	reti

Disassembly of section .text:

00000612 <__divsf3>:
 612:	0e 94 67 00 	call	0xce	; 0xce <__data_load_end>
 616:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_round>

Disassembly of section .text:

000000ce <__divsf3x>:
  ce:	10 c0       	rjmp	.+32     	; 0xf0 <__divsf3x+0x22>
  d0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_pscB>
  d4:	58 f0       	brcs	.+22     	; 0xec <__divsf3x+0x1e>
  d6:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscA>
  da:	40 f0       	brcs	.+16     	; 0xec <__divsf3x+0x1e>
  dc:	29 f4       	brne	.+10     	; 0xe8 <__divsf3x+0x1a>
  de:	5f 3f       	cpi	r21, 0xFF	; 255
  e0:	29 f0       	breq	.+10     	; 0xec <__divsf3x+0x1e>
  e2:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
  e6:	51 11       	cpse	r21, r1
  e8:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_szero>
  ec:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>
  f0:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_split3>
  f4:	68 f3       	brcs	.-38     	; 0xd0 <__divsf3x+0x2>

000000f6 <__divsf3_pse>:
  f6:	99 23       	and	r25, r25
  f8:	b1 f3       	breq	.-20     	; 0xe6 <__divsf3x+0x18>
  fa:	55 23       	and	r21, r21
  fc:	91 f3       	breq	.-28     	; 0xe2 <__divsf3x+0x14>
  fe:	95 1b       	sub	r25, r21
 100:	55 0b       	sbc	r21, r21
 102:	bb 27       	eor	r27, r27
 104:	aa 27       	eor	r26, r26
 106:	62 17       	cp	r22, r18
 108:	73 07       	cpc	r23, r19
 10a:	84 07       	cpc	r24, r20
 10c:	38 f0       	brcs	.+14     	; 0x11c <__divsf3_pse+0x26>
 10e:	9f 5f       	subi	r25, 0xFF	; 255
 110:	5f 4f       	sbci	r21, 0xFF	; 255
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	44 1f       	adc	r20, r20
 118:	aa 1f       	adc	r26, r26
 11a:	a9 f3       	breq	.-22     	; 0x106 <__divsf3_pse+0x10>
 11c:	35 d0       	rcall	.+106    	; 0x188 <__divsf3_pse+0x92>
 11e:	0e 2e       	mov	r0, r30
 120:	3a f0       	brmi	.+14     	; 0x130 <__divsf3_pse+0x3a>
 122:	e0 e8       	ldi	r30, 0x80	; 128
 124:	32 d0       	rcall	.+100    	; 0x18a <__divsf3_pse+0x94>
 126:	91 50       	subi	r25, 0x01	; 1
 128:	50 40       	sbci	r21, 0x00	; 0
 12a:	e6 95       	lsr	r30
 12c:	00 1c       	adc	r0, r0
 12e:	ca f7       	brpl	.-14     	; 0x122 <__divsf3_pse+0x2c>
 130:	2b d0       	rcall	.+86     	; 0x188 <__divsf3_pse+0x92>
 132:	fe 2f       	mov	r31, r30
 134:	29 d0       	rcall	.+82     	; 0x188 <__divsf3_pse+0x92>
 136:	66 0f       	add	r22, r22
 138:	77 1f       	adc	r23, r23
 13a:	88 1f       	adc	r24, r24
 13c:	bb 1f       	adc	r27, r27
 13e:	26 17       	cp	r18, r22
 140:	37 07       	cpc	r19, r23
 142:	48 07       	cpc	r20, r24
 144:	ab 07       	cpc	r26, r27
 146:	b0 e8       	ldi	r27, 0x80	; 128
 148:	09 f0       	breq	.+2      	; 0x14c <__divsf3_pse+0x56>
 14a:	bb 0b       	sbc	r27, r27
 14c:	80 2d       	mov	r24, r0
 14e:	bf 01       	movw	r22, r30
 150:	ff 27       	eor	r31, r31
 152:	93 58       	subi	r25, 0x83	; 131
 154:	5f 4f       	sbci	r21, 0xFF	; 255
 156:	3a f0       	brmi	.+14     	; 0x166 <__divsf3_pse+0x70>
 158:	9e 3f       	cpi	r25, 0xFE	; 254
 15a:	51 05       	cpc	r21, r1
 15c:	78 f0       	brcs	.+30     	; 0x17c <__divsf3_pse+0x86>
 15e:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 162:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_szero>
 166:	5f 3f       	cpi	r21, 0xFF	; 255
 168:	e4 f3       	brlt	.-8      	; 0x162 <__divsf3_pse+0x6c>
 16a:	98 3e       	cpi	r25, 0xE8	; 232
 16c:	d4 f3       	brlt	.-12     	; 0x162 <__divsf3_pse+0x6c>
 16e:	86 95       	lsr	r24
 170:	77 95       	ror	r23
 172:	67 95       	ror	r22
 174:	b7 95       	ror	r27
 176:	f7 95       	ror	r31
 178:	9f 5f       	subi	r25, 0xFF	; 255
 17a:	c9 f7       	brne	.-14     	; 0x16e <__divsf3_pse+0x78>
 17c:	88 0f       	add	r24, r24
 17e:	91 1d       	adc	r25, r1
 180:	96 95       	lsr	r25
 182:	87 95       	ror	r24
 184:	97 f9       	bld	r25, 7
 186:	08 95       	ret
 188:	e1 e0       	ldi	r30, 0x01	; 1
 18a:	66 0f       	add	r22, r22
 18c:	77 1f       	adc	r23, r23
 18e:	88 1f       	adc	r24, r24
 190:	bb 1f       	adc	r27, r27
 192:	62 17       	cp	r22, r18
 194:	73 07       	cpc	r23, r19
 196:	84 07       	cpc	r24, r20
 198:	ba 07       	cpc	r27, r26
 19a:	20 f0       	brcs	.+8      	; 0x1a4 <__divsf3_pse+0xae>
 19c:	62 1b       	sub	r22, r18
 19e:	73 0b       	sbc	r23, r19
 1a0:	84 0b       	sbc	r24, r20
 1a2:	ba 0b       	sbc	r27, r26
 1a4:	ee 1f       	adc	r30, r30
 1a6:	88 f7       	brcc	.-30     	; 0x18a <__divsf3_pse+0x94>
 1a8:	e0 95       	com	r30
 1aa:	08 95       	ret

Disassembly of section .text:

00000440 <__fixunssfsi>:
 440:	0e 94 82 02 	call	0x504	; 0x504 <__fp_splitA>
 444:	88 f0       	brcs	.+34     	; 0x468 <__fixunssfsi+0x28>
 446:	9f 57       	subi	r25, 0x7F	; 127
 448:	98 f0       	brcs	.+38     	; 0x470 <__fixunssfsi+0x30>
 44a:	b9 2f       	mov	r27, r25
 44c:	99 27       	eor	r25, r25
 44e:	b7 51       	subi	r27, 0x17	; 23
 450:	b0 f0       	brcs	.+44     	; 0x47e <__fixunssfsi+0x3e>
 452:	e1 f0       	breq	.+56     	; 0x48c <__fixunssfsi+0x4c>
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	99 1f       	adc	r25, r25
 45c:	1a f0       	brmi	.+6      	; 0x464 <__fixunssfsi+0x24>
 45e:	ba 95       	dec	r27
 460:	c9 f7       	brne	.-14     	; 0x454 <__fixunssfsi+0x14>
 462:	14 c0       	rjmp	.+40     	; 0x48c <__fixunssfsi+0x4c>
 464:	b1 30       	cpi	r27, 0x01	; 1
 466:	91 f0       	breq	.+36     	; 0x48c <__fixunssfsi+0x4c>
 468:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__fp_zero>
 46c:	b1 e0       	ldi	r27, 0x01	; 1
 46e:	08 95       	ret
 470:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_zero>
 474:	67 2f       	mov	r22, r23
 476:	78 2f       	mov	r23, r24
 478:	88 27       	eor	r24, r24
 47a:	b8 5f       	subi	r27, 0xF8	; 248
 47c:	39 f0       	breq	.+14     	; 0x48c <__fixunssfsi+0x4c>
 47e:	b9 3f       	cpi	r27, 0xF9	; 249
 480:	cc f3       	brlt	.-14     	; 0x474 <__fixunssfsi+0x34>
 482:	86 95       	lsr	r24
 484:	77 95       	ror	r23
 486:	67 95       	ror	r22
 488:	b3 95       	inc	r27
 48a:	d9 f7       	brne	.-10     	; 0x482 <__fixunssfsi+0x42>
 48c:	3e f4       	brtc	.+14     	; 0x49c <__fixunssfsi+0x5c>
 48e:	90 95       	com	r25
 490:	80 95       	com	r24
 492:	70 95       	com	r23
 494:	61 95       	neg	r22
 496:	7f 4f       	sbci	r23, 0xFF	; 255
 498:	8f 4f       	sbci	r24, 0xFF	; 255
 49a:	9f 4f       	sbci	r25, 0xFF	; 255
 49c:	08 95       	ret

Disassembly of section .text:

000003c6 <__floatunsisf>:
 3c6:	e8 94       	clt
 3c8:	09 c0       	rjmp	.+18     	; 0x3dc <__floatsisf+0x12>

000003ca <__floatsisf>:
 3ca:	97 fb       	bst	r25, 7
 3cc:	3e f4       	brtc	.+14     	; 0x3dc <__floatsisf+0x12>
 3ce:	90 95       	com	r25
 3d0:	80 95       	com	r24
 3d2:	70 95       	com	r23
 3d4:	61 95       	neg	r22
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	99 23       	and	r25, r25
 3de:	a9 f0       	breq	.+42     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3e0:	f9 2f       	mov	r31, r25
 3e2:	96 e9       	ldi	r25, 0x96	; 150
 3e4:	bb 27       	eor	r27, r27
 3e6:	93 95       	inc	r25
 3e8:	f6 95       	lsr	r31
 3ea:	87 95       	ror	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f1 11       	cpse	r31, r1
 3f4:	f8 cf       	rjmp	.-16     	; 0x3e6 <__floatsisf+0x1c>
 3f6:	fa f4       	brpl	.+62     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3f8:	bb 0f       	add	r27, r27
 3fa:	11 f4       	brne	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	60 ff       	sbrs	r22, 0
 3fe:	1b c0       	rjmp	.+54     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 400:	6f 5f       	subi	r22, 0xFF	; 255
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	16 c0       	rjmp	.+44     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 40a:	88 23       	and	r24, r24
 40c:	11 f0       	breq	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 40e:	96 e9       	ldi	r25, 0x96	; 150
 410:	11 c0       	rjmp	.+34     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 412:	77 23       	and	r23, r23
 414:	21 f0       	breq	.+8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 416:	9e e8       	ldi	r25, 0x8E	; 142
 418:	87 2f       	mov	r24, r23
 41a:	76 2f       	mov	r23, r22
 41c:	05 c0       	rjmp	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41e:	66 23       	and	r22, r22
 420:	71 f0       	breq	.+28     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 422:	96 e8       	ldi	r25, 0x86	; 134
 424:	86 2f       	mov	r24, r22
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	2a f0       	brmi	.+10     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 42c:	9a 95       	dec	r25
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	da f7       	brpl	.-10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 436:	88 0f       	add	r24, r24
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

Disassembly of section .text:

00000606 <__fp_inf>:
 606:	97 f9       	bld	r25, 7
 608:	9f 67       	ori	r25, 0x7F	; 127
 60a:	80 e8       	ldi	r24, 0x80	; 128
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	08 95       	ret

Disassembly of section .text:

00000622 <__fp_nan>:
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	08 95       	ret

Disassembly of section .text:

000005dc <__fp_pscA>:
 5dc:	00 24       	eor	r0, r0
 5de:	0a 94       	dec	r0
 5e0:	16 16       	cp	r1, r22
 5e2:	17 06       	cpc	r1, r23
 5e4:	18 06       	cpc	r1, r24
 5e6:	09 06       	cpc	r0, r25
 5e8:	08 95       	ret

Disassembly of section .text:

000005ea <__fp_pscB>:
 5ea:	00 24       	eor	r0, r0
 5ec:	0a 94       	dec	r0
 5ee:	12 16       	cp	r1, r18
 5f0:	13 06       	cpc	r1, r19
 5f2:	14 06       	cpc	r1, r20
 5f4:	05 06       	cpc	r0, r21
 5f6:	08 95       	ret

Disassembly of section .text:

0000057a <__fp_round>:
 57a:	09 2e       	mov	r0, r25
 57c:	03 94       	inc	r0
 57e:	00 0c       	add	r0, r0
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0xc>
 582:	88 23       	and	r24, r24
 584:	52 f0       	brmi	.+20     	; 0x59a <__fp_round+0x20>
 586:	bb 0f       	add	r27, r27
 588:	40 f4       	brcc	.+16     	; 0x59a <__fp_round+0x20>
 58a:	bf 2b       	or	r27, r31
 58c:	11 f4       	brne	.+4      	; 0x592 <__fp_round+0x18>
 58e:	60 ff       	sbrs	r22, 0
 590:	04 c0       	rjmp	.+8      	; 0x59a <__fp_round+0x20>
 592:	6f 5f       	subi	r22, 0xFF	; 255
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	08 95       	ret

Disassembly of section .text:

000004f4 <__fp_split3>:
 4f4:	57 fd       	sbrc	r21, 7
 4f6:	90 58       	subi	r25, 0x80	; 128
 4f8:	44 0f       	add	r20, r20
 4fa:	55 1f       	adc	r21, r21
 4fc:	59 f0       	breq	.+22     	; 0x514 <__fp_splitA+0x10>
 4fe:	5f 3f       	cpi	r21, 0xFF	; 255
 500:	71 f0       	breq	.+28     	; 0x51e <__fp_splitA+0x1a>
 502:	47 95       	ror	r20

00000504 <__fp_splitA>:
 504:	88 0f       	add	r24, r24
 506:	97 fb       	bst	r25, 7
 508:	99 1f       	adc	r25, r25
 50a:	61 f0       	breq	.+24     	; 0x524 <__fp_splitA+0x20>
 50c:	9f 3f       	cpi	r25, 0xFF	; 255
 50e:	79 f0       	breq	.+30     	; 0x52e <__fp_splitA+0x2a>
 510:	87 95       	ror	r24
 512:	08 95       	ret
 514:	12 16       	cp	r1, r18
 516:	13 06       	cpc	r1, r19
 518:	14 06       	cpc	r1, r20
 51a:	55 1f       	adc	r21, r21
 51c:	f2 cf       	rjmp	.-28     	; 0x502 <__fp_split3+0xe>
 51e:	46 95       	lsr	r20
 520:	f1 df       	rcall	.-30     	; 0x504 <__fp_splitA>
 522:	08 c0       	rjmp	.+16     	; 0x534 <__fp_splitA+0x30>
 524:	16 16       	cp	r1, r22
 526:	17 06       	cpc	r1, r23
 528:	18 06       	cpc	r1, r24
 52a:	99 1f       	adc	r25, r25
 52c:	f1 cf       	rjmp	.-30     	; 0x510 <__fp_splitA+0xc>
 52e:	86 95       	lsr	r24
 530:	71 05       	cpc	r23, r1
 532:	61 05       	cpc	r22, r1
 534:	08 94       	sec
 536:	08 95       	ret

Disassembly of section .text:

000005f8 <__fp_zero>:
 5f8:	e8 94       	clt

000005fa <__fp_szero>:
 5fa:	bb 27       	eor	r27, r27
 5fc:	66 27       	eor	r22, r22
 5fe:	77 27       	eor	r23, r23
 600:	cb 01       	movw	r24, r22
 602:	97 f9       	bld	r25, 7
 604:	08 95       	ret

Disassembly of section .text:

0000061a <__mulsf3>:
 61a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <__mulsf3x>
 61e:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_round>

Disassembly of section .text:

000001ac <__mulsf3x>:
 1ac:	0f c0       	rjmp	.+30     	; 0x1cc <__mulsf3x+0x20>
 1ae:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscA>
 1b2:	38 f0       	brcs	.+14     	; 0x1c2 <__mulsf3x+0x16>
 1b4:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_pscB>
 1b8:	20 f0       	brcs	.+8      	; 0x1c2 <__mulsf3x+0x16>
 1ba:	95 23       	and	r25, r21
 1bc:	11 f0       	breq	.+4      	; 0x1c2 <__mulsf3x+0x16>
 1be:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 1c2:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>
 1c6:	11 24       	eor	r1, r1
 1c8:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_szero>
 1cc:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_split3>
 1d0:	70 f3       	brcs	.-36     	; 0x1ae <__mulsf3x+0x2>

000001d2 <__mulsf3_pse>:
 1d2:	95 9f       	mul	r25, r21
 1d4:	c1 f3       	breq	.-16     	; 0x1c6 <__mulsf3x+0x1a>
 1d6:	95 0f       	add	r25, r21
 1d8:	50 e0       	ldi	r21, 0x00	; 0
 1da:	55 1f       	adc	r21, r21
 1dc:	62 9f       	mul	r22, r18
 1de:	f0 01       	movw	r30, r0
 1e0:	72 9f       	mul	r23, r18
 1e2:	bb 27       	eor	r27, r27
 1e4:	f0 0d       	add	r31, r0
 1e6:	b1 1d       	adc	r27, r1
 1e8:	63 9f       	mul	r22, r19
 1ea:	aa 27       	eor	r26, r26
 1ec:	f0 0d       	add	r31, r0
 1ee:	b1 1d       	adc	r27, r1
 1f0:	aa 1f       	adc	r26, r26
 1f2:	64 9f       	mul	r22, r20
 1f4:	66 27       	eor	r22, r22
 1f6:	b0 0d       	add	r27, r0
 1f8:	a1 1d       	adc	r26, r1
 1fa:	66 1f       	adc	r22, r22
 1fc:	82 9f       	mul	r24, r18
 1fe:	22 27       	eor	r18, r18
 200:	b0 0d       	add	r27, r0
 202:	a1 1d       	adc	r26, r1
 204:	62 1f       	adc	r22, r18
 206:	73 9f       	mul	r23, r19
 208:	b0 0d       	add	r27, r0
 20a:	a1 1d       	adc	r26, r1
 20c:	62 1f       	adc	r22, r18
 20e:	83 9f       	mul	r24, r19
 210:	a0 0d       	add	r26, r0
 212:	61 1d       	adc	r22, r1
 214:	22 1f       	adc	r18, r18
 216:	74 9f       	mul	r23, r20
 218:	33 27       	eor	r19, r19
 21a:	a0 0d       	add	r26, r0
 21c:	61 1d       	adc	r22, r1
 21e:	23 1f       	adc	r18, r19
 220:	84 9f       	mul	r24, r20
 222:	60 0d       	add	r22, r0
 224:	21 1d       	adc	r18, r1
 226:	82 2f       	mov	r24, r18
 228:	76 2f       	mov	r23, r22
 22a:	6a 2f       	mov	r22, r26
 22c:	11 24       	eor	r1, r1
 22e:	9f 57       	subi	r25, 0x7F	; 127
 230:	50 40       	sbci	r21, 0x00	; 0
 232:	9a f0       	brmi	.+38     	; 0x25a <__mulsf3_pse+0x88>
 234:	f1 f0       	breq	.+60     	; 0x272 <__mulsf3_pse+0xa0>
 236:	88 23       	and	r24, r24
 238:	4a f0       	brmi	.+18     	; 0x24c <__mulsf3_pse+0x7a>
 23a:	ee 0f       	add	r30, r30
 23c:	ff 1f       	adc	r31, r31
 23e:	bb 1f       	adc	r27, r27
 240:	66 1f       	adc	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	88 1f       	adc	r24, r24
 246:	91 50       	subi	r25, 0x01	; 1
 248:	50 40       	sbci	r21, 0x00	; 0
 24a:	a9 f7       	brne	.-22     	; 0x236 <__mulsf3_pse+0x64>
 24c:	9e 3f       	cpi	r25, 0xFE	; 254
 24e:	51 05       	cpc	r21, r1
 250:	80 f0       	brcs	.+32     	; 0x272 <__mulsf3_pse+0xa0>
 252:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 256:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_szero>
 25a:	5f 3f       	cpi	r21, 0xFF	; 255
 25c:	e4 f3       	brlt	.-8      	; 0x256 <__mulsf3_pse+0x84>
 25e:	98 3e       	cpi	r25, 0xE8	; 232
 260:	d4 f3       	brlt	.-12     	; 0x256 <__mulsf3_pse+0x84>
 262:	86 95       	lsr	r24
 264:	77 95       	ror	r23
 266:	67 95       	ror	r22
 268:	b7 95       	ror	r27
 26a:	f7 95       	ror	r31
 26c:	e7 95       	ror	r30
 26e:	9f 5f       	subi	r25, 0xFF	; 255
 270:	c1 f7       	brne	.-16     	; 0x262 <__mulsf3_pse+0x90>
 272:	fe 2b       	or	r31, r30
 274:	88 0f       	add	r24, r24
 276:	91 1d       	adc	r25, r1
 278:	96 95       	lsr	r25
 27a:	87 95       	ror	r24
 27c:	97 f9       	bld	r25, 7
 27e:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000630 <_fini>:
 630:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000632 <__funcs_on_exit>:
 632:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000634 <__simulator_exit>:
 634:	08 95       	ret

Disassembly of section .text.exit:

000005b2 <exit>:
 5b2:	ec 01       	movw	r28, r24
 5b4:	0e 94 19 03 	call	0x632	; 0x632 <__funcs_on_exit>
 5b8:	0e 94 18 03 	call	0x630	; 0x630 <_fini>
 5bc:	ce 01       	movw	r24, r28
 5be:	0e 94 1a 03 	call	0x634	; 0x634 <__simulator_exit>
 5c2:	ce 01       	movw	r24, r28
 5c4:	0e 94 16 03 	call	0x62c	; 0x62c <_Exit>

Disassembly of section .text._Exit:

0000062c <_Exit>:
 62c:	0e 94 65 00 	call	0xca	; 0xca <_exit>
